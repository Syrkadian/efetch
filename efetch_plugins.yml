###
# Efetch Plugin file
#
# Each item in this file becomes an efetch_server plugin
#
# Below is a simple example, note only the name field is required
#
#   office:
#       name: "Adv. Preview"
#       description: List the strings   # Optional
#       cache: True                     # Defaults to True, so not necessary
#       popularity: 2                   # Defaults to 5, changes list order, 0 is hidden
#       os:                             # Defaults to all, list of supported operating systems (Windows and Linux)
#           - linux
#       mimetypes:                      # Defaults to all, list of supported mimetypes
#			- application/mspowerpoint
#			- application/vnd.ms-works
#           ...
#           - text/rtf
#       extensions:                     # Defaults to all, list of supported file extensions
#           - ppt
#           - pptx
#           ...
#           - docx
#       command: "unoconv -f pdf -o '{{ file_cache_path }}.pdf' '{{ file_cache_path }}' "
#		file: "{{ file_cache_path }}.pdf"
#
# The COMMAND and FILE options use JINJA2 templating
#
# If no FILE is specified, the plugin returns the results of the command using <xmp>
###

ziplist:
  name: ZIP List
  os: [ 'linux' ]
  mimetypes: [ 'application/zip' ]
  command: "unzip -l '{{ file_cache_path }}'"

corexml:
  name: Core.xml
  os: [ 'linux' ]
  extensions: [ 'pptx', 'xlsx', 'docx' ]
  command: "unzip -qc '{{ file_cache_path }}' docProps/core.xml | xmllint --format  -"

cleanxml:
  name: Clean XML
  os: [ 'linux' ]
  mimetypes: [ 'application/xml' ]
  command: "cat '{{ file_cache_path }}' | xmllint --format --recover -"

cleanjson:
  name: Clean JSON
  os: [ 'linux' ]
  extensions: [ 'json' ]
  command: "cat '{{ file_cache_path }}' | python -m json.tool"

pdftotext:
  name: pdftotext
  os: [ 'linux' ]
  mimetypes: [ 'application/pdf' ]
  command: "pdftotext '{{ file_cache_path }}' -"

#clamscan:
#  name: Clam Scan
#  os: [ 'linux' ]
#  command: "clamscan '{{ file_cache_path }}'"

#file:
#  name: File
#  os: [ 'linux' ]
#  command: "file '{{ file_cache_path }}'"

#hexdumpc:
#  name: "hexdump -c"
#  os: [ 'linux' ]
#  command: "hexdump -C '{{ file_cache_path }}'"

#strings:
#  name: "strings bash"
#  os: [ 'linux' ]
#  command: "strings '{{ file_cache_path }}'"

