#!/usr/bin/env python
# Copyright 2016 Michael J Maurer
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import os
import sys
from efetch_server import efetch_app

__version__ = u'0.5.0'

if __name__ == u'__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(u'-d', u'--debug',
                        help=u'Displays debug messages',
                        action=u'store_true')
    parser.add_argument(u'-v', u'--version', 
                        help=u'Prints Efetch version',
                        action=u'store_true')
    parser.add_argument(u'-a', u'--address',
                        help=u'IP address for the Efetch server',
                        action=u'store',
                        default=u'localhost')
    parser.add_argument(u'-p', u'--port', type=int,
                        help=u'Port for the Efetch server',
                        action=u'store',
                        default=8080)
    parser.add_argument(u'-e', u'--elastic', type=unicode,
                        help=u'Elasticsearch URL, i.e. localhost:9200',
                        action=u'store',
                        default=None)
    parser.add_argument(u'-c', u'--cache', type=unicode,
                        help=u'Directory to store cached files',
                        action=u'store',
                        default=os.path.sep + u'tmp' + os.path.sep + u'efetch_cache' + os.path.sep)
    parser.add_argument(u'-m', u'--maxfilesize', type=int,
                        help=u'Max file size to cache in Megabytes, default 1GB',
                        action=u'store',
                        default=1000)
    parser.add_argument(u'-u', u'--defaultpath',
                        help=u'Default path used by the home page',
                        action=u'store',
                        default=u'~')
    parser.add_argument(u'-f', u'--pluginsfile', type=unicode,
                        help=u'Path to the plugins config file',
                        action=u'store',
                        default=os.path.sep + u'etc' + os.path.sep + u'efetch_plugins.yml')

    reload(sys)
    sys.setdefaultencoding(u'utf-8')
    args = parser.parse_args()

    if args.version:
        print args.version

    efetch_app.create_app(args.elastic, args.cache, args.maxfilesize, args.pluginsfile, args.defaultpath, args.debug)\
        .run(host=args.address, port=args.port, debug=args.debug, threaded=True)
