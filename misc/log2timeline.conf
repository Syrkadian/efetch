input {
	file {
		path => "/cases/timeline/*"
		sincedb_path => "/cases/sincedb/"
	}
}

filter {
	alter {
		add_field => {
			"file_extension" => ""
			"deleted" => "Present"
			"reallocated" => "Allocated"
			"case" => "orphaned"
		}
	}
	grok { 
		patterns_dir => ["/etc/logstash/patterns"]
		match => [ "message", "%{NOTTAB:logtimestamp}\s+%{NOTTAB:action_type}\s+%{SINGLE:file_name_structure_type}\/%{SINGLE:metadata_structure_type}\s+%{ASTRSK:deleted}*\s*%{INODE:metadata_address}%{REALLOC:reallocated}*:\s+%{FULLPATH:file_path}%{FILENAME:file_base_name}%{EXTENSION:file_extension}*\s+%{INT:size}\s+%{INT:uid}\s+%{INT:gid}\s+%{NOTTAB:case}\s+%{NOTTAB:image}"]
		overwrite => [ 
				"file_extension",
				"deleted",
				"reallocated",
				"case"
			] 
	}
	alter {
		condrewrite => [
			"deleted", "*", "Deleted",
			"reallocated", "(realloc)", "Reallocated",
			"file_name_structure_type", "d", "Directory",
			"file_name_structure_type", "r", "Regular File",
			"file_name_structure_type", "c", "Character Device",
			"file_name_structure_type", "b", "Block Device",
			"file_name_structure_type", "l", "Symbolic Link",
			"file_name_structure_type", "p", "Named FIFO",
			"file_name_structure_type", "s", "Shadow",
			"file_name_structure_type", "h", "Socket",
			"file_name_structure_type", "w", "Whiteout",
			"file_name_structure_type", "v", "TSK Virtual File",
			"file_name_structure_type", "-", "Unknown",
			"metadata_structure_type", "d", "Directory",
			"metadata_structure_type", "r", "Regular File",
			"metadata_structure_type", "c", "Character Device",
			"metadata_structure_type", "b", "Block Device",
			"metadata_structure_type", "l", "Symbolic Link",
			"metadata_structure_type", "p", "Named FIFO",
			"metadata_structure_type", "s", "Shadow",
			"metadata_structure_type", "h", "Socket",
			"metadata_structure_type", "w", "Whiteout",
			"metadata_structure_type", "v", "TSK Virtual File",
			"metadata_structure_type", "-", "Unknown",
			"logtimestamp", "0000-00-00 00:00:00 (UTC)", "1970-01-01 00:00:00 (UTC)"
		]
		add_field => { 
			"file_name" => "%{file_base_name}%{file_extension}"
			"file_full_path" => "%{file_path}%{file_base_name}%{file_extension}"
			"thumbnail" => "http://localhost:8180/image/%{metadata_address}?ext=%{file_extension}&case=%{case}&image=%{image}&type=%{file_name_structure_type}&filename=%{file_base_name}"
			"file_link" => "http://localhost:8180/file/%{metadata_address}?ext=%{file_extension}&case=%{case}&image=%{image}&type=%{file_name_structure_type}&filename=%{file_base_name}"
		 }
	}
	date {                              
		match => [ "logtimestamp", "yyyy-MM-dd HH:mm:ss (zzz)" ]
	}
}
output {
	stdout { }
	elasticsearch {
		embedded => "false"
		cluster => "logstash"
		index => "log2timeline"
		flush_size => "10000"
		idle_flush_time => "100"
		template_name => "log2timeline"
		template => "/etc/logstash/templates/elasticsearch-template.json"
	}
}
